---
title: "ST 352 | Lab Assignment 3 - Guide"
subtitle: "Regression Analysis and Inference"
author: "Brian Cervantes Alvarez"
date: "10-15-2024"
format: 
    html:
      theme: materia
execute: 
  echo: true
  warning: false
webr:
  packages: ['ggplot2', 'readr', 'dplyr', 'tidyr']
  show-startup-message: false
filters:
- webr
editor:
    render-on-save: true
---

**Reminder of the honor code:**  
*Lab assignments are to be completed individually!*

# Objective

In this lab assignment, you conducted regression analysis and inference using two datasets: `reaction.txt` and `planets.txt`. Problem 1 focused on investigating the relationship between age and reaction time, while Problem 2 examined the relationship between the distance from the sun and the length of a year for various celestial objects.

# Problem 2: Distance from the Sun and Length of Year

At a meeting of the International Astronomical Union (IAE) in Prague in 2006, Pluto was determined not to be a planet but rather the largest member of the Kuiper Belt of icy objects. You examined the relationship between the distance from the sun for nine sun-orbiting objects (including Pluto) and their length of years (Earth years) for one complete orbit around the sun.

The data are in the `planets.txt` dataset on Canvas. The variables are:

- `distance` (distance from the sun in millions of miles)
- `length` (length of a year in Earth years)

## 11) Include the properly labeled scatterplot here and describe the relationship between these two variables.

```{webr-r}
# Load necessary libraries
# library(readr)   # Uncomment if you prefer using readr's read_table()
# library(dplyr)   # Not used in base R implementation

# Download and import the planets data using base R
urlPlanets <- "https://raw.githubusercontent.com/bcervantesalvarez/MS-Statistics/main/Academic-Year-2024-2025/Fall%202024/ST-352-Labs/Lab3/planets.txt"
download.file(urlPlanets, destfile = "planets.txt", method = "auto")

# Read the planets data using base R's read.table()
# Assuming the data is space-separated and has a header
planetsData <- read.table("planets.txt", header = TRUE, sep = "", stringsAsFactors = FALSE)

# View the first few rows of the dataset
head(planetsData)

# 11) Scatterplot using base R
plot(planetsData$distance, planetsData$length,
     main = "Scatterplot of Length of Year vs. Distance from Sun",
     xlab = "Distance from Sun (million miles)",
     ylab = "Length of Year (Earth years)",
     pch = 19,           # Solid circle for points
     col = "purple",     # Purple color for points
     cex = 1.5)          # Size of the points

# Optional: Add grid lines for better readability
grid()
```

**Description:**

The scatterplot displays a positive relationship between the distance from the sun and the length of the year. As the distance increases, the length of the year also tends to increase. This suggests that celestial objects farther from the sun take longer to complete one orbit around it.

## 12) Write the least-squares regression equation. Define the terms in the equation in the context of the problem.



After applying the natural logarithm transformation to both variables, the least-squares regression equation is:

$$
\ln(\text{length}) = \beta_0 + \beta_1 \times \ln(\text{distance})
$$

Where:

- $\ln(\text{length})$ is the natural logarithm of the length of a year in Earth years.
- $\ln(\text{distance})$ is the natural logarithm of the distance from the sun in millions of miles.
- $\beta_0$ is the y-intercept of the regression line.
- $\beta_1$ is the slope coefficient, representing the elasticity of the length of the year with respect to distance from the sun.

## 13) Report the value of R-square. What does this value tell you about the relationship between ln(length of year) and ln(distance from the sun)?



```{webr-r}
# Load necessary library for data manipulation (optional)
# library(readr)  # Only if you need to read data using read_table()

# Assume planetsData is already loaded into your R environment
# If not, you can load it using read.table or read.csv as appropriate

# 1. Transform Variables Using Natural Log
planetsData$lnLength <- log(planetsData$length)
planetsData$lnDistance <- log(planetsData$distance)

# Verify the transformation
head(planetsData)

# 2. Fit the Transformed Linear Regression Model
modelPlanets <- lm(lnLength ~ lnDistance, data = planetsData)
summaryModel <- summary(modelPlanets)
print(summaryModel)

# 3. Extract and Report the R-squared Value
rSquared <- summaryModel$r.squared
print(paste("R-squared:", round(rSquared, 4)))

```

The R-square value is **0.99**. This indicates that **99%** of the variability in the natural logarithm of the length of a year is explained by the natural logarithm of the distance from the sun. This suggests a strong linear relationship between the two variables after transformation.

## 14) It has been suggested that the asteroid belt between Mars and Jupiter may be the remnants of a failed planet. Suppose that the failed planet was 285 million miles from the sun. Predict its length of year (in Earth years) using the best-fitting model. You may do this by hand (showing work) or using R.



```{webr-r}
# Predict the natural log of length for Distance = 285 million miles
newDistance <- 285
newLnDistance <- log(newDistance)
newPlanet <- data.frame(lnDistance = newLnDistance)

# Predict ln(length) using the model
predictedLnLength <- predict(modelPlanets, newdata = newPlanet)

# Convert back to original scale by exponentiating
predictedLength <- exp(predictedLnLength)
predictedLength
```


```{r}
#| warning: false

generate.insig <- function(n) {
  diffs <- sample(seq(-3,3,1), n, replace=T, prob=c(0.0, 0.0, 0.2, 0.45, 0.1, 0.05, 0.05))
}


n = 40
nsim <- 10000

p.null.t <- p.alt.t <- rep(0, nsim)
p.null.w <- p.alt.w <- rep(0, nsim)
for (i in 1:nsim){
  data.insig = generate.insig(n)
  p.null.t[i] <- t.test(data.insig)$p.val
  p.alt.t[i] <- t.test(data.insig)$p.val
  
  p.null.w[i] < wilcox.test(data.insig)$p.val
  p.alt.w[i] <- wilcox.test(data.insig)$p.val

}  
  
mean(p.null.t < 0.05)
mean(p.null.w < 0.05)
    
mean(p.alt.t < 0.05)
mean(p.alt.w < 0.05)


```

